// Code generated by entc, DO NOT EDIT.

package vacuser

import (
	"time"
)

const (
	// Label holds the string label denoting the vacuser type in the database.
	Label = "vac_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldSnsID holds the string denoting the sns_id field in the database.
	FieldSnsID = "sns_id"
	// FieldPartition holds the string denoting the partition field in the database.
	FieldPartition = "partition"
	// FieldRangeKey holds the string denoting the range_key field in the database.
	FieldRangeKey = "range_key"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldToken holds the string denoting the token field in the database.
	FieldToken = "token"
	// FieldWatcherEnabled holds the string denoting the watcher_enabled field in the database.
	FieldWatcherEnabled = "watcher_enabled"
	// FieldReserveConfig holds the string denoting the reserve_config field in the database.
	FieldReserveConfig = "reserve_config"
	// FieldReserveEnabled holds the string denoting the reserve_enabled field in the database.
	FieldReserveEnabled = "reserve_enabled"
	// FieldReservations holds the string denoting the reservations field in the database.
	FieldReservations = "reservations"
	// Table holds the table name of the vacuser in the database.
	Table = "vac_users"
)

// Columns holds all SQL columns for vacuser fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldSnsID,
	FieldPartition,
	FieldRangeKey,
	FieldPassword,
	FieldToken,
	FieldWatcherEnabled,
	FieldReserveConfig,
	FieldReserveEnabled,
	FieldReservations,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
